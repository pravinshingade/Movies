version: '3.3'

services:
  api:
    container_name: api
    restart: on-failure
    build:
      context: ./
    expose:
      - 4000
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: on-failure
    depends_on:
      - api
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend
      - default
    volumes:
      - type: bind
        source: ./nginx/
        target: /etc/nginx/conf.d/
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  frontend:
    external:
      name: frontend

# https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71